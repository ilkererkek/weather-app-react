[{"D:\\VSCodeProjects\\weatherapp\\src\\App.js":"1","D:\\VSCodeProjects\\weatherapp\\src\\index.js":"2","D:\\VSCodeProjects\\weatherapp\\src\\Components\\Header.js":"3","D:\\VSCodeProjects\\weatherapp\\src\\Components\\Footer.js":"4","D:\\VSCodeProjects\\weatherapp\\src\\Views\\Main.js":"5","D:\\VSCodeProjects\\weatherapp\\src\\Context\\WeatherContext.js":"6","D:\\VSCodeProjects\\weatherapp\\src\\Components\\Loading.js":"7","D:\\VSCodeProjects\\weatherapp\\src\\Components\\MainList.js":"8","D:\\VSCodeProjects\\weatherapp\\src\\Components\\CityCard.js":"9","D:\\VSCodeProjects\\weatherapp\\src\\Views\\City.js":"10","D:\\VSCodeProjects\\weatherapp\\src\\Components\\Details.js":"11","D:\\VSCodeProjects\\weatherapp\\src\\Views\\NotFound.js":"12"},{"size":864,"mtime":1606287281431,"results":"13","hashOfConfig":"14"},{"size":197,"mtime":1606205441993,"results":"15","hashOfConfig":"14"},{"size":440,"mtime":1606260466224,"results":"16","hashOfConfig":"14"},{"size":219,"mtime":1606242317330,"results":"17","hashOfConfig":"14"},{"size":454,"mtime":1606292409804,"results":"18","hashOfConfig":"14"},{"size":1712,"mtime":1606332710269,"results":"19","hashOfConfig":"14"},{"size":358,"mtime":1606339976243,"results":"20","hashOfConfig":"14"},{"size":613,"mtime":1606330282163,"results":"21","hashOfConfig":"14"},{"size":917,"mtime":1606345596763,"results":"22","hashOfConfig":"14"},{"size":1038,"mtime":1606342732000,"results":"23","hashOfConfig":"14"},{"size":1879,"mtime":1606349265639,"results":"24","hashOfConfig":"14"},{"size":393,"mtime":1606340648874,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"4abs6b",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\VSCodeProjects\\weatherapp\\src\\App.js",[],["56","57"],"D:\\VSCodeProjects\\weatherapp\\src\\index.js",[],["58","59"],"D:\\VSCodeProjects\\weatherapp\\src\\Components\\Header.js",["60"],"import { Link } from 'react-router-dom';\r\nimport cloud from '../cloud.svg';\r\nconst Header = () => {\r\n    return (\r\n        <div className='header'>\r\n            <div className=\"container \">\r\n               <Link to='/' className=\"logo-container\">\r\n                <img className=\"logo\" src={cloud} ></img>\r\n                <h3>Weather App</h3>\r\n               </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","D:\\VSCodeProjects\\weatherapp\\src\\Components\\Footer.js",[],"D:\\VSCodeProjects\\weatherapp\\src\\Views\\Main.js",[],"D:\\VSCodeProjects\\weatherapp\\src\\Context\\WeatherContext.js",["61","62","63","64"],"import axios from \"axios\";\r\nconst {useState, createContext, useEffect } = require(\"react\");\r\nexport const WeatherContext = createContext();\r\n\r\nconst WeatherContextProvider = (props) => {\r\n    const [cityIds, setCityIds] = useState([5128581,2643743,745044,1261481,1850147]);\r\n    const [forecasts,setForecasts] = useState([]);\r\n    const [loading,setLoading] = useState(true)\r\n    const fetchCityData = async (id) => {\r\n        \r\n        const res = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?id=${id}&appid=bae8b743a044835a3647e4e03e901110&units=metric`);\r\n        const {city,list} = await res.data;\r\n        return res.data;\r\n    }\r\n\r\n    const getCityData=async (id)=> {\r\n        \r\n        const find = forecasts.find(forecast => forecast.city.id===parseInt(id))\r\n        console.log('getdata'+find);\r\n       try {\r\n            if(find === undefined)\r\n            {   \r\n                console.log('not found');\r\n                const data = await fetchCityData(id);\r\n                console.log(data)\r\n                setForecasts(forecasts =>[...forecasts,data])\r\n            }\r\n            return(true)\r\n       } catch (error) {\r\n           return(false)\r\n       }\r\n    }\r\n    useEffect( () => {\r\n        setLoading(true)\r\n        const fetchdata = () => {\r\n            Promise.all(\r\n                cityIds.map(async (cityId) => await fetchCityData(cityId))\r\n            ).then(data=>setForecasts(data));\r\n       }\r\n       fetchdata();\r\n       setLoading(false)\r\n    } ,[])\r\n\r\n    return(\r\n        <WeatherContext.Provider value={{loading,forecasts,getCityData}} >\r\n            {props.children}\r\n        </WeatherContext.Provider>\r\n    )\r\n}\r\nexport default WeatherContextProvider;\r\n","D:\\VSCodeProjects\\weatherapp\\src\\Components\\Loading.js",["65","66","67"],"import React, { useEffect, useState } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Loading = () => {\r\n\r\n        return (\r\n            <div className=\"container load-page\">\r\n                <div className=\"loader\">Loading...</div>\r\n                <h1>Loading ...</h1>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default Loading\r\n","D:\\VSCodeProjects\\weatherapp\\src\\Components\\MainList.js",["68"],"import React, { useContext } from 'react'\r\nimport { WeatherContext } from '../Context/WeatherContext';\r\nimport CityCard from './CityCard';\r\nimport Loading from './Loading';\r\nconst MainList = () => {\r\n    const {forecasts}= useContext(WeatherContext);\r\n    return (\r\n        <div className=\"main-list \">\r\n           <h2>Some forecast data for you,<span className=\"dark\"> all around the globe.</span></h2>\r\n           <ul>\r\n               {forecasts.slice(0,5).map(forecast => <li key={forecast.city.id}><CityCard forecast={forecast}/></li>)}\r\n           </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainList\r\n","D:\\VSCodeProjects\\weatherapp\\src\\Components\\CityCard.js",["69"],"D:\\VSCodeProjects\\weatherapp\\src\\Views\\City.js",["70","71"],"D:\\VSCodeProjects\\weatherapp\\src\\Components\\Details.js",["72","73","74"],"D:\\VSCodeProjects\\weatherapp\\src\\Views\\NotFound.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"75","replacedBy":"79"},{"ruleId":"77","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":8,"column":17,"nodeType":"83","endLine":8,"endColumn":52},{"ruleId":"84","severity":1,"message":"85","line":6,"column":21,"nodeType":"86","messageId":"87","endLine":6,"endColumn":31},{"ruleId":"84","severity":1,"message":"88","line":12,"column":16,"nodeType":"86","messageId":"87","endLine":12,"endColumn":20},{"ruleId":"84","severity":1,"message":"89","line":12,"column":21,"nodeType":"86","messageId":"87","endLine":12,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":42,"column":8,"nodeType":"92","endLine":42,"endColumn":10,"suggestions":"93"},{"ruleId":"84","severity":1,"message":"94","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"95","line":1,"column":28,"nodeType":"86","messageId":"87","endLine":1,"endColumn":36},{"ruleId":"84","severity":1,"message":"96","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":18},{"ruleId":"84","severity":1,"message":"97","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":15},{"ruleId":"81","severity":1,"message":"82","line":13,"column":13,"nodeType":"83","endLine":13,"endColumn":122},{"ruleId":"90","severity":1,"message":"98","line":12,"column":16,"nodeType":"99","endLine":18,"endColumn":6},{"ruleId":"90","severity":1,"message":"100","line":18,"column":7,"nodeType":"92","endLine":18,"endColumn":11,"suggestions":"101"},{"ruleId":"84","severity":1,"message":"102","line":10,"column":12,"nodeType":"86","messageId":"87","endLine":10,"endColumn":19},{"ruleId":"90","severity":1,"message":"103","line":22,"column":7,"nodeType":"92","endLine":22,"endColumn":17,"suggestions":"104"},{"ruleId":"81","severity":1,"message":"82","line":30,"column":25,"nodeType":"83","endLine":30,"endColumn":140},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],["105"],["106"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'setCityIds' is assigned a value but never used.","Identifier","unusedVar","'city' is assigned a value but never used.","'list' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cityIds'. Either include it or remove the dependency array.","ArrayExpression",["107"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.","'Loading' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getCityData'. Either include it or remove the dependency array.",["108"],"'sunTime' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'date', 'forecasts', and 'id'. Either include them or remove the dependency array.",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [cityIds]",{"range":"116","text":"117"},"Update the dependencies array to be: [getCityData, id]",{"range":"118","text":"119"},"Update the dependencies array to be: [date, forecast, forecasts, id]",{"range":"120","text":"121"},[1500,1502],"[cityIds]",[650,654],"[getCityData, id]",[902,912],"[date, forecast, forecasts, id]"]